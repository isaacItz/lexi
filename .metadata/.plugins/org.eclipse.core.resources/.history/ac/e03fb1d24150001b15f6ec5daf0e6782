package modelo;

import java.util.List;

public class Semantico {
	List<Identificador> identificadores;
	List<Nodo> arbol;
	String errores = "";

	public Semantico(List<Identificador> identificadores, List<Nodo> arbol) {
		this.identificadores = identificadores;
		this.arbol = arbol;
	}


	public void analizar() {
		for (int i = 0; i < arbol.size(); i++) {
			if(arbol.get(i).getToken().getTipo().compareTo("PALABRA_RESERVADA_INTEGER") == 0 ) {
				declaracion("ENTERO",i-1);
			}else if(arbol.get(i).getToken().getTipo().compareTo("PALABRA_RESERVADA_REAL") == 0) {
				declaracion("REAL",i-1);
			}
		}


		for (int i = 0; i < arbol.size(); i++) {
			if(arbol.get(i).getToken().getTipo().compareTo("IDENTIFICADOR_TK")==0) {
				if(existeIdentificador(arbol.get(i).getToken().getValor())) {
					if(arbol.get(i-1).getToken().getTipo().compareTo("SIMBOLO_=")==0) {
						if(arbol.get(i-2).getToken().getTipo().compareTo("NUMERO_ENTERO_TK")==0) {
							validarAsignacion("ENTERO",arbol.get(i-2).getToken().getValor() ,arbol.get(i).getToken().getValor());
						}else {
							if(arbol.get(i-2).getToken().getTipo().compareTo("NUMERO_REAL_TK")==0) {
								validarAsignacion("REAL",arbol.get(i-2).getToken().getValor(),arbol.get(i).getToken().getValor());
							}
						}
					}
				}else {
					errores += "Identificador "+arbol.get(i).getToken().getValor()+" no ha sido declarado \n";
					System.out.println(errores);
				}
			}
		}

		for (Identificador identificador : identificadores) {
			System.out.println(identificador.toString());
		}

		System.out.println(errores);
	}

	private void validarAsignacion(String tipo,String valor,String id) {
		for (int i = 0; i < identificadores.size(); i++) {
			if (identificadores.get(i).getId().compareTo(id)==0) {
				if(identificadores.get(i).getTipo().compareTo(tipo)==0) {
					identificadores.get(i).setValor(valor+"");
				}else {
					errores += "Asinacion erronea\n" + id;
					System.out.println(errores);
				}
			}
		}
	}
	private boolean existeIdentificador(String id) {
		for (int i = 0; i < identificadores.size(); i++) {
			if(identificadores.get(i).getId().compareTo(id)==0 && identificadores.get(i).getTipo()!=null) {
				return true;
			}
		}
		return false;
	}


	private void declaracion(String tipo, int lugar) {
		for (int i = lugar; i >= 0; i--) {
			if(arbol.get(i).getToken().getTipo().compareTo("PALABRA_RESERVADA_INTEGER") != 0  && arbol.get(i).getToken().getTipo().compareTo("PALABRA_RESERVADA_REAL") != 0) {
				if (arbol.get(i).getToken().getTipo().compareTo("IDENTIFICADOR_TK") == 0) {
					if(arbol.get(i-1).getToken().getTipo().compareTo("SIMBOLO_=")==0) {
						if(tipo.compareTo("ENTERO") == 0) {
							if(arbol.get(i-2).getToken().getTipo().compareTo("NUMERO_ENTERO_TK")==0) {
								int valorE = Integer.parseInt(arbol.get(i-2).getToken().getValor());
								setDatosEntero(tipo, valorE, arbol.get(i).getToken().getValor());
							}else {
								errores += "Incompatibilidad de tipo: No puede asignar un valor REAL al identificador ENTERO "+arbol.get(i).getToken().getValor()+"\n";
								setDatosEntero(tipo, 0, arbol.get(i).getToken().getValor());
							}

						}else {
							if(arbol.get(i-2).getToken().getTipo().compareTo("NUMERO_REAL_TK") == 0) {
								float valorF = Float.parseFloat(arbol.get(i-2).getToken().getValor()); 
								setDatosFloat(tipo, valorF,arbol.get(i).getToken().getValor());
							}else {
								errores+="Incompatibilidad de tipo: No puede asignar un valor ENTERO al identificador REAL "+arbol.get(i).getToken().getValor()+"\n";
								setDatosFloat(tipo, 0, arbol.get(i).getToken().getValor());
							}

						}
					}else {
						int valorC = 0;
						if(tipo.compareTo("ENTERO") == 0) {
							setDatosEntero(tipo, valorC, arbol.get(i).getToken().getValor());
						}else {
							setDatosFloat(tipo, valorC, arbol.get(i).getToken().getValor());
						}
					}
				}
			}else{
				i = -1;
			}
		}
	}


	private void setDatosEntero(String tipo, int valor, String id) {
		for (int i = 0; i < identificadores.size(); i++) {
			Identificador identifIcador = identificadores.get(i);
			if (identifIcador.getId().compareTo(id) == 0) {
				if(identifIcador.getTipo() == null && identifIcador.getValor() == null ) {
					identificadores.get(i).setTipo(tipo);
					identificadores.get(i).setValor(valor+"");
				}else {
					errores += "Doble declaración. El identificador: "+id+" ya ha sido declarado\n";
				}
			}
		}

	}

	private void setDatosFloat(String tipo, float valor, String id) {
		for (int i = 0; i < identificadores.size(); i++) {
			Identificador identifIcador = identificadores.get(i);
			if (identifIcador.getId().compareTo(id) == 0) {
				if(identifIcador.getTipo() == null && identifIcador.getValor() == null ) {
					identificadores.get(i).setTipo(tipo);
					identificadores.get(i).setValor(valor+"");
				}else {
					errores += "Doble declaracion. El identificador: "+id+" ya ha sido declarado\n";
				}
			}
		}


	}
}
